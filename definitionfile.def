Bootstrap: docker
From: nvidia/cuda:11.7.1-devel-ubuntu20.04
Stage: build

%setup
    ############################################
    # setup. コンテナ外で行われるコマンド
    ############################################

%files
    ############################################
    # files ファイルのマウント
    ############################################
    ./entrypoint.sh /
    ./requirements.txt /

%environment
    ############################################
    # enviroments 環境変数の定義
    ############################################
    export TZ=Asia/Tokyo 
    export LC_ALL=C

%post
    ############################################
    # post ファイルのダウロードとか，色々．基本的にここに書く
    ############################################
    # aptでインストールする場合，入力待ちを避けるために下記のように書く
    # DEBIAN_FRONTEND=noninteractive && apt install -y hogehoge ...

    # essential  
    apt update
    DEBIAN_FRONTEND=noninteractive apt install -y lsb-release wget curl git nano gnupg build-essential software-properties-common
    mkdir -p /run/user/1000
    mkdir -p /var/lib/dbus
    
    # avoid freezing
    DEBIAN_FRONTEND=noninteractive apt install -y tzdata keyboard-configuration


    ##################################
    # ROS noetic
    #################################
    DEBIAN_FRONTEND=noninteractive apt update
    DEBIAN_FRONTEND=noninteractive sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
    DEBIAN_FRONTEND=noninteractive curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
    DEBIAN_FRONTEND=noninteractive apt update
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-desktop-full
    DEBIAN_FRONTEND=noninteractive apt install -y python3-rosdep python3-rosinstall python3-vcstools python3-catkin-tools

    # venvに切り替え
    DEBIAN_FRONTEND=noninteractive apt update && apt install -y \
        python3.10 \
        python3.10-venv \
        python3.10-dev \
        python3-pip \
        build-essential \
        git \
        wget && \
        apt clean && rm -rf /var/lib/apt/lists/*

    DEBIAN_FRONTEND=noninteractive apt update && apt install -y qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools
    DEBIAN_FRONTEND=noninteractive apt update && apt install -y x11-apps
    DEBIAN_FRONTEND=noninteractive apt update && apt install -y jupyter-core jupyter-notebook

    DEBIAN_FRONTEND=noninteractive apt update && apt install -y libxcb-cursor0
    DEBIAN_FRONTEND=noninteractive apt update && apt install -y libxcb-xinerama0 libxcb-icccm4 libxcb-image0 \
        libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 \
        libxcb-xfixes0 libxcb-sync1 libxcb-xinput0

    # 仮想環境のディレクトリを作成
    mkdir -p /opt/venv

    # 仮想環境を作成
    python3.10 -m venv /opt/venv

    # 仮想環境を有効化してpipをアップグレード
    . /opt/venv/bin/activate && \
    pip install --upgrade pip setuptools wheel

    # set entrypoint.sh
    # source /opt/ros/noetic/setup.bash
    echo source /opt/ros/noetic/setup.bash >> /entrypoint.sh

    # ############################################
    # sigverse-ros-server
    # ############################################
 
    # install Mongo C Driver
    mkdir Library && cd Library && \
    wget https://github.com/mongodb/mongo-c-driver/releases/download/1.4.2/mongo-c-driver-1.4.2.tar.gz && \
    tar zxvf mongo-c-driver-1.4.2.tar.gz && \
    cd mongo-c-driver-1.4.2 && \
    ./configure && \
    make && \
    make install

    # install Mongo C++ Driver
    cd Library && \
    wget https://github.com/mongodb/mongo-cxx-driver/archive/r3.0.3.tar.gz && \
    tar zxvf r3.0.3.tar.gz && \
    cd mongo-cxx-driver-r3.0.3/build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DLIBMONGOC_DIR=/usr/local -DLIBBSON_DIR=/usr/local .. && \
    make EP_mnmlstc_core && \
    make && \
    make install

    # cuda11.7 full install
    apt-get -y install cuda-11-7

    # ##################################
    # # apt pkg install
    # #################################
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-rosbridge-server
    DEBIAN_FRONTEND=noninteractive apt install -y gnome-terminal
    # Navigation
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-amcl ros-noetic-base-local-planner ros-noetic-map-server ros-noetic-move-base
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-moveit
    DEBIAN_FRONTEND=noninteractive apt install -y ninja
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-robot-state-publisher
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-moveit-commander
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-moveit-ros-perception
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-exotica-ompl-solver
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-moveit-planners-ompl
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-moveit-visual-tools
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-moveit
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-joint-trajectory-controller
    DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-dwa-local-planner
    # yolov8
    DEBIAN_FRONTEND=noninteractive apt install -y libcudnn8 libcublas-12-0 nvidia-cuda-toolkit
    # DEBIAN_FRONTEND=noninteractive apt install -y ros-noetic-hsrb-analytic-ik  # tmcのパスを追加しないと見えない可能性あり

    # pytorch3dは0.7.5と0.7.6で動作確認済み
    # pip install git+https://github.com/facebookresearch/pytorch3d.git
    # python -m pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu101/torch1.8/index.html
    # pip install pillow==9.1.0

    # pip install
    /opt/venv/bin/pip install -r /requirements.txt

    # finalize
    rm -rf /var/lib/apt/lists/*


%runscript
    ############################################
    # runscript. singularity run で実行するコマンド
    ############################################

%startscript
    ############################################
    # startscript. singularity insntance startで実行するコマンド 
    ############################################

%test
    ############################################
    # test. テスト時に実行するコマンド
    ############################################


%labels
    ############################################
    # label. ラベル
    ############################################
    Author Yuga Yano
    Version v0.0.1

%help
    ############################################
    # help. ヘルプ
    ############################################
